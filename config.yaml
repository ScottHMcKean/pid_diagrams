catalog: shm
schema: pid
preprocess:
  raw_path: assets
  processed_path: processed_pdfs
  dpi: 200
  tile_width_px: 4096
  tile_height_px: 2048
  overlap_px: 256
parse:
  example_path: examples
  parsed_path: parsed_pdfs
  local_tables_path: local_tables
  metadata_table_name: metadata_results
  tags_table_name: tag_results
  fm_endpoint: databricks-claude-3-7-sonnet
  temperature: 0.1
  thinking_budget_tokens: 2048
  max_retries: 2
  retry_delay_s: 1
  num_few_shot_examples: 2
  metadata_prompt: |
    You are an expert in parsing process and instrumentation diagrams and engineering drawings. You will be given a full drawing and a zoomed in excerpt of the title block and your task is to extract metadata including:

    - drawing name
    - title
    - revision
    - date (YYYYMMDD)
    - locations
    - organization
    - legacy numbers
    - whether there is an engineering stamp (has_stamp)

    Guidelines:
    - Do not extract tags or equipment numbers and focus solely on the metadata in the title block. 
    - Only return information from the drawing and do not try to interpet or invent a response.
    - The revision is usually in the lower right corner besdie the drawing name
    - The data is often accompanies by "ISSUED FOR ..."
    - Legacy numbers are drawings numbers that differ from the main drawing name in the title block

    Thought Process:
    1. Identify where the title block is in the drawing
    2. Extract the drawing name and title
    3. Identify the revision history and look at the dates
    4. Find the most recent revision and use that as the revision and date
    5. The organization is in the title block and refers to the organization that issued the drawings.
    6. The locations should also be in the title block and refer to physical locations that the drawing refers to.
    7. Look for an engineering stamp which has a signature and date along with a stamp symbol and number
    8. Reflect on the captured information. Did you find everything? Does it match the both the drawing and the zoomed in image?
    9. Return the information in a valid JSON format.

    IMPORTANT: Respond with valid JSON only. Do not wrap in markdown code blocks or add any explanatory text. Start directly with { and end with }.
  metadata_example: |
    Example output:
    {
      drawing_name: MRP-250-PID-PR-001103
      title: AREA 250 - FROTH TREATMENT 2ND STAGE SETTLER TRAIN 1 PIPING AND INSTRUMENTATION DIAGRAM
      revision: 3g
      date: 20250811
      locations: [ALB-MRP-250]
      organization: CNRL
      legacy_number: []
      has_stamp: True
    }
  tag_prompt: |
    You are an expert in parsing process and instrumentation diagrams and engineering drawings. You will be given a tile of drawing and your task is to extract the following

    - equipment tags
    - line tags
    - incoming streams
    - outgoing streams
    - moc (management of change) numbers
    - comments

    Guidelines:
    - MOC numbers are often in the comments or diagram area, usually in clouded text blocks. The refer to a change to the drawing.
    - Incoming streams are denoted by a block arrow with text pointing inside the drawing. 
    - Outgoing streams are denoted by a block arrow with text pointing outside the drawing.
    - Only extract the number from the streams - it should have a dot notation (e.g. 241.005)
    - Line tags are often directly below a line and usually have a size (e.g. 4\")
    - Line tags must always contain a dash, an abbreviation, and a number (e.g. 14\"-P-241001-SEG)
    - Equipment tags are often on multiple lines within a shape (square, circle, diamond) with an abbreviation and a dash (PT-250)
    - Only extract equipment tags that have a dash and a number (e.g. 'PP-140' but not 'PP')
    - Comments are anything outside of the tags and streams and should be read as a list of text entries
    - Avoid non-ANSI special symbols
    - Always escape dimensional symbols (e.g \")

    Thought Process:
    1. Find all the equipment tags in the drawing
    2. Find all the line tags in the drawing
    3. Find all the incoming and outgoing streams in the drawing
    4. Extract any MOC numbers or comments in the drawing
    5. Review the extracted information. Did you find everything? Does it match the both the drawing and the zoomed in image?
    6. Look at the tags carefully - do they match the guidelines above? Make sure you aren't inventing tags that don't exist.
    7. Return the extracted information in a valid JSON format.

    IMPORTANT: Respond with valid JSON only. Do not wrap in markdown code blocks or add any explanatory text. Start directly with { and end with }.
  tag_example: |
    Example output:
    {
      equipment_tags: [250-LT-1610, 250-MV-1630, 250-OW-6\"-A4A-1202, 250-PU-105B],
      line_tags: [14\"-SU-241001-SEG],
      incoming_streams: [240.003]
      outgoing_streams: [241.005, 241.006],
      moc_numbers: [102393],
      comments: [
        FEED/STEAM PREHEATER SPRAY ATTEMPERATOR,
        DESIGN TEMP: 150C, DESIHN PRESS 7350 kPa
      ],
    }
